// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.zzl.mynote.controller;

import com.zzl.mynote.controller.ApplicationConversionServiceFactoryBean;
import com.zzl.mynote.domain.Artical;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Artical, String> ApplicationConversionServiceFactoryBean.getArticalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.zzl.mynote.domain.Artical, java.lang.String>() {
            public String convert(Artical artical) {
                return new StringBuilder().append(artical.getContent()).append(' ').append(artical.getTitle()).append(' ').append(artical.getAuthor()).append(' ').append(artical.getBeginDate()).toString();
            }
        };
    }
    
    public Converter<Long, Artical> ApplicationConversionServiceFactoryBean.getIdToArticalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.zzl.mynote.domain.Artical>() {
            public com.zzl.mynote.domain.Artical convert(java.lang.Long id) {
                return Artical.findArtical(id);
            }
        };
    }
    
    public Converter<String, Artical> ApplicationConversionServiceFactoryBean.getStringToArticalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.zzl.mynote.domain.Artical>() {
            public com.zzl.mynote.domain.Artical convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Artical.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getArticalToStringConverter());
        registry.addConverter(getIdToArticalConverter());
        registry.addConverter(getStringToArticalConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
